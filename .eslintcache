[{"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/rootReducer.js":"1","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/userReducer.js":"2","/Volumes/Transcend/musicDiary/music-diary-client/src/actions/actionCreators.js":"3","/Volumes/Transcend/musicDiary/music-diary-client/src/App.js":"4","/Volumes/Transcend/musicDiary/music-diary-client/src/components/Login.js":"5","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/MainPage.js":"6","/Volumes/Transcend/musicDiary/music-diary-client/src/index.js":"7","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/pastEntryPage.js":"8","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/PastEntryPage.js":"9","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/AllEntries.js":"10","/Volumes/Transcend/musicDiary/music-diary-client/src/reportWebVitals.js":"11","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/searchReducer.js":"12","/Volumes/Transcend/musicDiary/music-diary-client/src/components/SongCard.js":"13","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SearchPage.js":"14","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SelectedSongPage.js":"15","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/currentSongReducer.js":"16"},{"size":543,"mtime":1607702885450,"results":"17","hashOfConfig":"18"},{"size":837,"mtime":1607527531900,"results":"19","hashOfConfig":"18"},{"size":3528,"mtime":1607739434070,"results":"20","hashOfConfig":"18"},{"size":1450,"mtime":1607701391310,"results":"21","hashOfConfig":"18"},{"size":4890,"mtime":1607796477590,"results":"22","hashOfConfig":"18"},{"size":3728,"mtime":1607694284730,"results":"23","hashOfConfig":"18"},{"size":1479,"mtime":1606657086570,"results":"24","hashOfConfig":"18"},{"size":163,"mtime":1607543445800,"results":"25","hashOfConfig":"18"},{"size":1765,"mtime":1607803345240,"results":"26","hashOfConfig":"18"},{"size":1204,"mtime":1607792925740,"results":"27","hashOfConfig":"18"},{"size":362,"mtime":1606178282000,"results":"28","hashOfConfig":"18"},{"size":628,"mtime":1607693883320,"results":"29","hashOfConfig":"18"},{"size":1293,"mtime":1607706900370,"results":"30","hashOfConfig":"18"},{"size":1966,"mtime":1607791595210,"results":"31","hashOfConfig":"18"},{"size":4205,"mtime":1607782958050,"results":"32","hashOfConfig":"18"},{"size":691,"mtime":1607737067210,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ongdxc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/rootReducer.js",[],["77","78"],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/userReducer.js",[],["79","80"],"/Volumes/Transcend/musicDiary/music-diary-client/src/actions/actionCreators.js",[],["81","82"],"/Volumes/Transcend/musicDiary/music-diary-client/src/App.js",[],["83","84"],"/Volumes/Transcend/musicDiary/music-diary-client/src/components/Login.js",["85","86","87","88","89"],"import React from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux'\nimport { toggleSignup, handleLoginFormChange, sendSignup, sendLogin } from '../actions/actionCreators'\n\nconst Login = (props) => {\n  const { signup, toggleSignup, form, handleLoginFormChange, sendSignup, sendLogin } = props\n  const { email, username, password, passwordConfirmation } = form\n\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (signup){\n      if (password == passwordConfirmation){\n        sendSignup({username: username, email: email, password: password})\n      } else {\n        alert(\"Those passwords don't match!\")\n      }\n    } else {\n      sendLogin({email: email, password: password})\n    }\n  }\n\n  const classes = useStyles();\n  return(\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n        <h3>{signup ? \"Sign up!\" : \"Login!\"} </h3>\n        </Typography>\n      <form className={classes.form} noValidate onSubmit={ onSubmit }>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={handleLoginFormChange} \n          /> \n        <br/>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password} \n            onChange={handleLoginFormChange}\n          />\n     <br/>\n        {signup &&\n          <>\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"username\"\n            label=\"username\"\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"username\"\n            value={username} \n            onChange={handleLoginFormChange}\n          />\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"passwordConfirmation\"\n            label=\"passwordConfirmation\"\n            type=\"password\"\n            id=\"passwordConfirmation\"\n            autoComplete=\"passwordConfirmation\"\n            value={passwordConfirmation} \n            onChange={handleLoginFormChange}\n          />\n          </>\n        }\n        <br/>\n        <input type=\"submit\" \n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            value=\"Submit\" />\n      <br/>\n      <br/>\n         </form>\n         <button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleSignup}>Or... {signup ? \"Login!\" : \"Sign up!\"}</button>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      </Container>\n      </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  signup: state.user.signup,\n  form: state.user.loginForm\n})\n\nexport default connect(mapStateToProps, { toggleSignup, handleLoginFormChange, sendSignup, sendLogin })(Login)","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/MainPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/index.js",[],["90","91"],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/pastEntryPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/PastEntryPage.js",["92","93","94"],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/AllEntries.js",["95"],"import React, {Component} from 'react'\n\n\nexport default class AllEntries extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n         data: [],\n        };\n      }\n     \n      componentDidMount() {\n        const api_url = \"http://localhost:3000/api/v1/entries\";\n        fetch(api_url)\n          .then(response => response.json())\n          .then(data => this.setState({ data }));\n          // .then(data => console.log(data));\n      }\n\n      renderEntries(){\n        console.log(this.state.data, \"this is state\")\n        return this.state.data.map((card) => {\n            return <div className=\"card\">\n                      <h3>Username: {card.user.username}</h3>\n                      <h3>Date: {card.update_date}</h3>\n                      <h3>Song: {card.song.name}</h3>\n                      <h3>Artist: {card.song.artist}</h3>\n                      <img src={card.song.image} alt=\"Image\" />\n                </div>\n        })\n    } \n\n      render(){\n            return (\n                <div>\n                    <div className=\"cards\">\n                        {this.renderEntries()}\n                    </div>\n                </div>\n            )\n        }\n    }","/Volumes/Transcend/musicDiary/music-diary-client/src/reportWebVitals.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/searchReducer.js",["96"],"  \n  const initialState = {\n    results: [],\n  }\n\n  const emptyState = {\n    results: [],\n  }\n\n  \n  const searchReducer = (state=initialState, action) => {\n    switch (action.type) {\n      case \"START_SEARCH\":\n        //returns an array of objects \n          return {\n              ...state,\n              results: []\n          }\n      case \"ADD_RESULTS\":\n          return {\n              ...state,\n              results: action.results\n          }\n          case \"REMOVE_RESULTS\":\n            return {\n              state: emptyState\n            }\n      default:\n          return state\n  }\n  }\n  \n  export default searchReducer","/Volumes/Transcend/musicDiary/music-diary-client/src/components/SongCard.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SearchPage.js",["97","98"],"import { Component } from \"react\"\nimport { connect } from 'react-redux'\nimport { searchForSong, selectSong } from '../actions/actionCreators'\nimport SongCard from '../components/SongCard'\n\nclass SearchEntry extends Component {\n\n    state = {\n        allsongs: \"\"\n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.searchForSong(event.target.search.value)\n    }\n\n    // handleClick = (event) => {\n    //     console.log(\"here\", event)\n    //     let spotify_id = event.target.dataset.tag\n    //     // let user = current_user \n    //     let date = Date.now()\n    //     debugger\n    //     // this.props.selectSong(spotify_id)\n    // }\n\n    render(){\n        // console.log(this.props, \"in the entry page\")\n        // this.props.history.push('/allentries')\n        const content = this.props.allsongs ? 'no song found' : this.props.allsongs.map(song => <SongCard key={song.spotify_id} {...song} />);\n        return (\n            <div>\n            <form className=\"form-inline mt-2mt-md-0\" onSubmit={this.handleSubmit}>\n                <input className=\"form-control mr-sm-2\" type=\"text\" name=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.handleChange} value={this.state.search}/>\n                <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n\n            <div className=\"cards\">\n           \n            {/* {content} */}\n            {this.props.allsongs.map(song => <SongCard key={song.spotify_id} {...song} />) }             \n            \n                </div>\n            </div>\n        )\n    }\n}\n\nconst msp = (state) => ({\n    allsongs: state.search.results\n  })\n\nfunction mapDispatchToProps(dispatch){\n    return { searchForSong: (search) => dispatch(searchForSong(search)) }\n}\n\nexport default connect(msp, mapDispatchToProps)(SearchEntry)","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SelectedSongPage.js",["99"],"import React, { useRef, Component  } from 'react';\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { songOfTheDay, handleSongFormChange } from '../actions/actionCreators'\n\nconst SelectedSong = (props) => {\nconst audioRef = useRef()\nconst {name, artist, image, preview, spotify_id, lyrics} = props.song\nlet history = useHistory();\n\nconst handleSubmit = (event) => {\n    event.preventDefault()\n    // let date = Date.now()\n    const data ={\n        song_id: props.song.id,\n        user_id: props.user,\n        // date: date, \n        description: event.target.description.value\n      }\n    props.songOfTheDay(data)\n    history.push(\"/pastentry\");\n  }\n\n\n\n  return(\n     <div className=\"card\">\n            <h1>{name}</h1>\n            <img src={image} alt={name}/><br/>\n            <p> {artist} </p>\n            <a href={lyrics}>Link to {name} Lyrics</a>\n            <audio controls ref={audioRef}>\n            <source src={preview} type='audio/mpeg' />\n            </audio>\n            <button data-tag={spotify_id}> Pick this song for the day </button>\n            <form onSubmit={handleSubmit}>\n                <label>\n                Diary Entry:\n                <textarea value={props.description} name=\"description\" onChange={props.handleSongFormChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n    </div>\n\n  \n  )\n}\n\nconst msp = (state) => ({\n    user: state.user.id,\n    song: state.song.results,\n    description: state.song.description\n  })\n\nfunction mapDispatchToProps(dispatch){\n    return { \n        songOfTheDay: (search) => dispatch(songOfTheDay(search)),\n        handleSongFormChange: (search) => dispatch(handleSongFormChange(search))\n    }\n}\n\nexport default connect(msp, mapDispatchToProps)(SelectedSong)\n\n\n\n\n\n// class SelectedSong extends Component {\n//     state = {\n//         description: \"\"\n//     }\n\n//     handleChange = (event) => {\n//         this.setState({[event.target.name]: event.target.value})\n//     }\n    \n//    handleSubmit = (event) => {\n//         event.preventDefault()\n//        debugger\n//         // this.props.history.push(\"/allentries\")\n//         //Make fetch request to save props/song\n//         //save props in state\n//         //go to next page and save user id and song_id\n//         // console.log(this.props, \"in song card\")\n//         console.log(Date.now(), \"this is the date\")\n//         console.log(this.props.song.id, this.props.user, \"in selected song card\")\n//         // console.log(this, \"this is this\")\n//         let date = Date.now()\n//         console.log(this.props.description, \"this is description\")\n//         // props.songOfTheDay(props.song.id, props.user, date)\n//         // history.push(\"/allentries\");\n//       }\n    \n//     render(){\n//     // const audioRef = useRef()\n//     const {name, artist, image, preview, spotify_id, lyrics} = this.props.song\n//       return(\n//          <div className=\"card\">\n//                 <h1>{name}</h1>\n//                 <img src={image} alt={name}/><br/>\n//                 <p> {artist} </p>\n//                 <a href={lyrics}>Link to {name} Lyrics</a>\n//                 {/* <audio controls ref={audioRef}>\n//                 <source src={preview} type='audio/mpeg' />\n//                 </audio> */}\n//                 <button data-tag={spotify_id}> Pick this song for the day </button>\n//                 <form onSubmit={this.handleSubmit}>\n//                     <label>\n//                     Essay:\n//                     <textarea value={this.props.description} name=\"description\" onChange={this.props.handleSongFormChange} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//         </div>\n    \n      \n//       )\n//     }\n// }\n//     const msp = (state) => ({\n//         user: state.user.id,\n//         song: state.song.results,\n//         description: state.song.description\n//       })\n    \n//     function mapDispatchToProps(dispatch){\n//         return { songOfTheDay: (search) => dispatch(songOfTheDay(search))  }\n//     }\n    \n//     export default connect(msp, {mapDispatchToProps})(SelectedSong)\n    ",["100","101"],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/currentSongReducer.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":24},{"ruleId":"112","severity":1,"message":"117","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":12},{"ruleId":"119","severity":1,"message":"120","line":59,"column":20,"nodeType":"121","messageId":"122","endLine":59,"endColumn":22},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","replacedBy":"124"},{"ruleId":"112","severity":1,"message":"125","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"126","line":39,"column":12,"nodeType":"114","messageId":"115","endLine":39,"endColumn":17},{"ruleId":"112","severity":1,"message":"127","line":39,"column":19,"nodeType":"114","messageId":"115","endLine":39,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":29,"column":23,"nodeType":"130","endLine":29,"endColumn":64},{"ruleId":"112","severity":1,"message":"131","line":6,"column":9,"nodeType":"114","messageId":"115","endLine":6,"endColumn":19},{"ruleId":"112","severity":1,"message":"132","line":3,"column":25,"nodeType":"114","messageId":"115","endLine":3,"endColumn":35},{"ruleId":"112","severity":1,"message":"133","line":33,"column":15,"nodeType":"114","messageId":"115","endLine":33,"endColumn":22},{"ruleId":"112","severity":1,"message":"125","line":1,"column":25,"nodeType":"114","messageId":"115","endLine":1,"endColumn":34},{"ruleId":"102","replacedBy":"134"},{"ruleId":"104","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],["136"],["137"],["136"],["137"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["136"],["137"],"'Component' is defined but never used.","'songs' is assigned a value but never used.","'setSongs' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'emptyState' is assigned a value but never used.","'selectSong' is defined but never used.","'content' is assigned a value but never used.",["136"],["137"],"no-global-assign","no-unsafe-negation"]