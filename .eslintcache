[{"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/rootReducer.js":"1","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/userReducer.js":"2","/Volumes/Transcend/musicDiary/music-diary-client/src/actions/actionCreators.js":"3","/Volumes/Transcend/musicDiary/music-diary-client/src/App.js":"4","/Volumes/Transcend/musicDiary/music-diary-client/src/components/Login.js":"5","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/MainPage.js":"6","/Volumes/Transcend/musicDiary/music-diary-client/src/index.js":"7","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/pastEntryPage.js":"8","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/PastEntryPage.js":"9","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/AllEntries.js":"10","/Volumes/Transcend/musicDiary/music-diary-client/src/reportWebVitals.js":"11","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/searchReducer.js":"12","/Volumes/Transcend/musicDiary/music-diary-client/src/components/SongCard.js":"13","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SearchPage.js":"14","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SelectedSongPage.js":"15","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/currentSongReducer.js":"16","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/CommentPage.js":"17","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/commentsReducer.js":"18","/Volumes/Transcend/musicDiary/music-diary-client/src/components/CommentsCard.js":"19","/Volumes/Transcend/musicDiary/music-diary-client/src/components/PastSongCard.js":"20","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/entriesReducer.js":"21","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/loadingReducer.js":"22","/Volumes/Transcend/musicDiary/music-diary-client/src/components/Loading.js":"23","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/LoadingContainer.js":"24","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/entryReducer.js":"25","/Volumes/Transcend/musicDiary/music-diary-client/src/components/Navbar.js":"26"},{"size":752,"mtime":1608434689240,"results":"27","hashOfConfig":"28"},{"size":837,"mtime":1607527531900,"results":"29","hashOfConfig":"28"},{"size":5362,"mtime":1608658207260,"results":"30","hashOfConfig":"28"},{"size":1848,"mtime":1608677575350,"results":"31","hashOfConfig":"28"},{"size":4890,"mtime":1607796477590,"results":"32","hashOfConfig":"28"},{"size":3819,"mtime":1608677725170,"results":"33","hashOfConfig":"28"},{"size":1479,"mtime":1606657086570,"results":"34","hashOfConfig":"28"},{"size":163,"mtime":1607543445800,"results":"35","hashOfConfig":"28"},{"size":1432,"mtime":1608846057530,"results":"36","hashOfConfig":"28"},{"size":2407,"mtime":1608847881550,"results":"37","hashOfConfig":"28"},{"size":362,"mtime":1606178282000,"results":"38","hashOfConfig":"28"},{"size":628,"mtime":1608433857800,"results":"39","hashOfConfig":"28"},{"size":1172,"mtime":1607826277290,"results":"40","hashOfConfig":"28"},{"size":1958,"mtime":1608677646280,"results":"41","hashOfConfig":"28"},{"size":4232,"mtime":1608079241410,"results":"42","hashOfConfig":"28"},{"size":691,"mtime":1607737067210,"results":"43","hashOfConfig":"28"},{"size":1986,"mtime":1608657980720,"results":"44","hashOfConfig":"28"},{"size":925,"mtime":1608658165430,"results":"45","hashOfConfig":"28"},{"size":343,"mtime":1608660301200,"results":"46","hashOfConfig":"28"},{"size":1303,"mtime":1608050832750,"results":"47","hashOfConfig":"28"},{"size":638,"mtime":1608062329830,"results":"48","hashOfConfig":"28"},{"size":248,"mtime":1608423864720,"results":"49","hashOfConfig":"28"},{"size":339,"mtime":1608426996380,"results":"50","hashOfConfig":"28"},{"size":366,"mtime":1608425008270,"results":"51","hashOfConfig":"28"},{"size":393,"mtime":1608434459330,"results":"52","hashOfConfig":"28"},{"size":738,"mtime":1608677183830,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ongdxc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/rootReducer.js",[],["119","120"],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/userReducer.js",[],["121","122"],"/Volumes/Transcend/musicDiary/music-diary-client/src/actions/actionCreators.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/App.js",["123"],"import { Component } from 'react'\nimport './App.css';\nimport Login from './components/Login'\nimport { autoLogin, logout } from './actions/actionCreators'\n// import Navbar from './containers/Navbar'\nimport LoadingContainer from './containers/LoadingContainer'\nimport newSearch from './containers/SearchPage'\nimport allEntries from './containers/AllEntries'\nimport selectedSong from './containers/SelectedSongPage'\nimport pastEntry from './containers/PastEntryPage'\nimport commentPage from './containers/CommentPage'\nimport MainPage from './containers/MainPage'\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n\n  componentDidMount(){\n    localStorage.token && this.props.autoLogin()\n  }\n  render(){\n  //   if (this.props.loading) {\n  //     return (\n  //         <div> \n  //             <h1> Loading </h1>\n  //             <LoadingContainer/>\n  //         </div>\n  //     )\n  // } else \n  return (\n      <div className=\"container\">\n        {this.props.user.id\n        ?\n          <>\n          <Switch>\n           <Route exact path=\"/allentries\" component={allEntries} />\n            <Route exact path=\"/newSearch\" component={newSearch} />\n            <Route exact path=\"/pastentry\" component={pastEntry} />\n            <Route exact path=\"/selectedsong\" component={selectedSong} />\n            <Route exact path=\"/comments\" component={commentPage} />\n            <Route path=\"/main\" component={MainPage}/>\n            <Route path=\"/\" component={MainPage}/>\n          </Switch>\n          <button onClick={this.props.logout}>Logout!</button>\n          </>\n         :\n          <Login/>\n        } \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  user: state.user, \n\n})\n\nexport default connect(mapStateToProps, { autoLogin, logout })(App);",["124","125"],"/Volumes/Transcend/musicDiary/music-diary-client/src/components/Login.js",["126","127","128","129","130"],"import React from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux'\nimport { toggleSignup, handleLoginFormChange, sendSignup, sendLogin } from '../actions/actionCreators'\n\nconst Login = (props) => {\n  const { signup, toggleSignup, form, handleLoginFormChange, sendSignup, sendLogin } = props\n  const { email, username, password, passwordConfirmation } = form\n\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (signup){\n      if (password == passwordConfirmation){\n        sendSignup({username: username, email: email, password: password})\n      } else {\n        alert(\"Those passwords don't match!\")\n      }\n    } else {\n      sendLogin({email: email, password: password})\n    }\n  }\n\n  const classes = useStyles();\n  return(\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          {/* <LockOutlinedIcon /> */}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n        <h3>{signup ? \"Sign up!\" : \"Login!\"} </h3>\n        </Typography>\n      <form className={classes.form} noValidate onSubmit={ onSubmit }>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={handleLoginFormChange} \n          /> \n        <br/>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password} \n            onChange={handleLoginFormChange}\n          />\n     <br/>\n        {signup &&\n          <>\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"username\"\n            label=\"username\"\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"username\"\n            value={username} \n            onChange={handleLoginFormChange}\n          />\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"passwordConfirmation\"\n            label=\"passwordConfirmation\"\n            type=\"password\"\n            id=\"passwordConfirmation\"\n            autoComplete=\"passwordConfirmation\"\n            value={passwordConfirmation} \n            onChange={handleLoginFormChange}\n          />\n          </>\n        }\n        <br/>\n        <input type=\"submit\" \n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            value=\"Submit\" />\n      <br/>\n      <br/>\n         </form>\n         <button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleSignup}>Or... {signup ? \"Login!\" : \"Sign up!\"}</button>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      </Container>\n      </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  signup: state.user.signup,\n  form: state.user.loginForm\n})\n\nexport default connect(mapStateToProps, { toggleSignup, handleLoginFormChange, sendSignup, sendLogin })(Login)","/Volumes/Transcend/musicDiary/music-diary-client/src/containers/MainPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/index.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/pastEntryPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/PastEntryPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/AllEntries.js",["131","132","133","134","135","136"],"import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { viewComments, getAllEntries } from '../actions/actionCreators'\nimport LoadingContainer from './LoadingContainer'\nimport Nav from '../components/Navbar'\n\nclass AllEntries extends Component{\n      componentDidMount() {\n          this.props.getAllEntries()\n      }\n\n      handleCommentClick = (e) => {\n          let id = e.target.dataset.id\n          this.props.viewComments(id)\n          this.props.history.push(\"/comments\")\n      }\n\n      handleEntryClick = (e) => {\n        let currentID = e.target.dataset.id\n        console.log(this.props, \"you are in entries looking at the id\")\n        const result = this.props.entries.results.filter(entry => entry.id == currentID )\n        console.log(result[0])\n        debugger\n        let description = result[0].description\n        let user = result[0].user.username\n        let date = result[0].update_date\n    }\n\n      renderEntries(){\n        return this.props.entries.results.map((card) => {\n            return <div className=\"card\">\n                      <h3>Username: {card.user.username}</h3>\n                      <h3>Date: {card.update_date}</h3>\n                      <h3>Song: {card.song.name}</h3>\n                      <h3>Artist: {card.song.artist}</h3>\n                      <img src={card.song.image} alt=\"Image\" />\n                      <button data-id={card.id} onClick={this.handleCommentClick}> View All Comments/ Comment on Diary Entry  </button>\n                      <button data-id={card.id} onClick={this.handleEntryClick}> View Entry  </button>\n                </div>\n        })\n    } \n\n      render(){\n        //   if (this.props.loading) {\n        //     return (\n        //         <LoadingContainer/>\n        //     )\n        // } else \n        return (\n                <div>\n                     <Nav />\n                     <h1>Music Diary</h1>\n                    <div className=\"cards\">\n                        {this.renderEntries()}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\nconst msp = (state) => ({\n    entries: state.entries\n  })\n\n\n    function mapDispatchToProps(dispatch){\n        return { \n            viewComments: (id) => dispatch(viewComments(id)),\n            getAllEntries: () => dispatch(getAllEntries())\n        }\n    }\n    \n    export default connect(msp, mapDispatchToProps)(AllEntries)\n","/Volumes/Transcend/musicDiary/music-diary-client/src/reportWebVitals.js",[],["137","138"],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/searchReducer.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/components/SongCard.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SearchPage.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/SelectedSongPage.js",["139","140"],"import React, { useRef, Component  } from 'react';\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { songOfTheDay, handleSongFormChange } from '../actions/actionCreators'\n\nconst SelectedSong = (props) => {\nconst audioRef = useRef()\nconst {name, artist, image, preview, spotify_id, lyrics} = props.song\nlet history = useHistory();\n\nconst handleSubmit = (event) => {\n    event.preventDefault()\n    // let date = Date.now()\n    const data ={\n        song_id: props.song.id,\n        user_id: props.user,\n        // date: date, \n        description: event.target.description.value\n      }\n    props.songOfTheDay(data)\n    history.push(\"/pastentry\");\n  }\n\n\n\n  return(\n     <div className=\"card\">\n            <h1>{name}</h1>\n            <img src={image} alt={name}/><br/>\n            <p> {artist} </p>\n            <a href={lyrics}>Link to {name} Lyrics</a>\n            <audio controls ref={audioRef}>\n            <source src={preview} type='audio/mpeg' />\n            </audio>\n            {/* <button data-tag={spotify_id}> Pick this song for the day </button> */}\n            <form onSubmit={handleSubmit}>\n                <label>\n                Diary Entry:\n                <textarea value={props.description} name=\"description\" onChange={props.handleSongFormChange} />\n                </label>\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" />\n            </form>\n    </div>\n\n  \n  )\n}\n\nconst msp = (state) => ({\n    user: state.user.id,\n    song: state.song.results,\n    description: state.song.description\n  })\n\nfunction mapDispatchToProps(dispatch){\n    return { \n        songOfTheDay: (search) => dispatch(songOfTheDay(search)),\n        handleSongFormChange: (search) => dispatch(handleSongFormChange(search))\n    }\n}\n\nexport default connect(msp, mapDispatchToProps)(SelectedSong)\n\n\n\n\n\n// class SelectedSong extends Component {\n//     state = {\n//         description: \"\"\n//     }\n\n//     handleChange = (event) => {\n//         this.setState({[event.target.name]: event.target.value})\n//     }\n    \n//    handleSubmit = (event) => {\n//         event.preventDefault()\n//        debugger\n//         // this.props.history.push(\"/allentries\")\n//         //Make fetch request to save props/song\n//         //save props in state\n//         //go to next page and save user id and song_id\n//         // console.log(this.props, \"in song card\")\n//         console.log(Date.now(), \"this is the date\")\n//         console.log(this.props.song.id, this.props.user, \"in selected song card\")\n//         // console.log(this, \"this is this\")\n//         let date = Date.now()\n//         console.log(this.props.description, \"this is description\")\n//         // props.songOfTheDay(props.song.id, props.user, date)\n//         // history.push(\"/allentries\");\n//       }\n    \n//     render(){\n//     // const audioRef = useRef()\n//     const {name, artist, image, preview, spotify_id, lyrics} = this.props.song\n//       return(\n//          <div className=\"card\">\n//                 <h1>{name}</h1>\n//                 <img src={image} alt={name}/><br/>\n//                 <p> {artist} </p>\n//                 <a href={lyrics}>Link to {name} Lyrics</a>\n//                 {/* <audio controls ref={audioRef}>\n//                 <source src={preview} type='audio/mpeg' />\n//                 </audio> */}\n//                 <button data-tag={spotify_id}> Pick this song for the day </button>\n//                 <form onSubmit={this.handleSubmit}>\n//                     <label>\n//                     Essay:\n//                     <textarea value={this.props.description} name=\"description\" onChange={this.props.handleSongFormChange} />\n//                     </label>\n//                     <input type=\"submit\" value=\"Submit\" />\n//                 </form>\n//         </div>\n    \n      \n//       )\n//     }\n// }\n//     const msp = (state) => ({\n//         user: state.user.id,\n//         song: state.song.results,\n//         description: state.song.description\n//       })\n    \n//     function mapDispatchToProps(dispatch){\n//         return { songOfTheDay: (search) => dispatch(songOfTheDay(search))  }\n//     }\n    \n//     export default connect(msp, {mapDispatchToProps})(SelectedSong)\n    ","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/currentSongReducer.js",[],["141","142"],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/CommentPage.js",["143","144","145"],"import React, { useRef, Component  } from 'react';\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport CommentCard from '../components/CommentsCard'\nimport { addComment } from '../actions/actionCreators'\n\nconst Comments = (props) => {\nconst audioRef = useRef()\nlet history = useHistory();\n\n// const handleSubmit = (event) => {\n//     event.preventDefault()\n//     // let date = Date.now()\n//     const data ={\n//         song_id: props.song.id,\n//         user_id: props.user,\n//         // date: date, \n//         description: event.target.description.value\n//       }\n//     props.songOfTheDay(data)\n//     history.push(\"/pastentry\");\n//   }\n\n// const {content} = props\nconst handleSubmit = (event) => {\n  event.preventDefault()\n  // let date = Date.now()\n\n  const data ={\n      user_id: props.user,\n      entry_id: parseInt(props.entry_id.entry_id),\n      content: event.target.comment.value\n    }\n    console.log(data, \"props in your comments page\")\n    // debugger\n    props.addComment(data)\n  history.push(\"/comments\");\n\n}\n\nconst content = () => {\n  \n}\n\n\n  return(\n     <div className=\"container\">\n       <div className=\"comment-cards\">\n          {!props.comments || props.comments.length === 0 ? \n            <p>Nothing Here </p>\n            : props.comments && props.comments.map(comment => <CommentCard key={comment.id} {...comment} />) }\n      </div>\n       <form onSubmit={handleSubmit}>\n                <label>\n                Comment Here \n                <input type=\"text\" name=\"comment\" />\n                </label>\n                <input type=\"submit\" className=\"submit\" value=\"Submit\" />\n            </form>\n\n        </div>\n  )\n}\n\nconst msp = (state) => ({\n    user: state.user.id,\n    comments: state.comments.results,\n    entry_id: state.entry_id\n  })\n\nfunction mapDispatchToProps(dispatch){\n    return { \n      addComment: (id) => dispatch(addComment(id)),\n    }\n}\n\nexport default connect(msp, mapDispatchToProps)(Comments)\n\n\n","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/commentsReducer.js",["146"],"  \n  const initialState = {\n    results: [],\n    entry_id: null\n  }\n\n  const emptyState = {\n    results: [],\n  }\n\n  \n  const commentsReducer = (state=initialState, action) => {\n \n    switch (action.type) {\n      case \"SET_COMMENTS\":\n        //returns an array of objects \n          return {\n              ...state,\n              // results: []\n              // results: action.results\n              results: action.results\n          }\n          // case \"ADD_COMMENT_ID\":\n          //   return {\n          //     ...state,\n          //     entry_id: action.id\n          //   }\n      case \"ADD_COMMENTS\":\n          return {\n              ...state,\n              \n              results: [...state.results, action.results]\n          }\n      //     case \"REMOVE_COMMENTS\":\n      //       return {\n      //         state: emptyState\n      //       }\n      default:\n          return state\n  }\n  }\n  \n  export default commentsReducer","/Volumes/Transcend/musicDiary/music-diary-client/src/components/CommentsCard.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/components/PastSongCard.js",["147","148","149","150"],"import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { selectSong } from '../actions/actionCreators'\n\nconst PastSongCard = (props) => {\n    let history = useHistory();\n    const audioRef = useRef()\n    const {name, artist, image, preview, spotify_id, lyrics} = props.song\n    const {date } = props.update_date\n\n      const handleClick = (event) => {\n        props.selectSong(props)\n        history.push(\"/selectedsong\");\n      }\n     \n  return (\n    <div className=\"card\" >\n      <img src={image} alt={name}/><br/>\n        <h1> {props.update_date}</h1>\n        <h2> {name}</h2>\n        <h3> By: {artist} </h3>\n        <a href={lyrics} className='new-line'>Link to {name} Lyrics</a>\n      <br></br>\n      <br />\n      <audio controls ref={audioRef} className='new-line'>\n      <source src={preview} className='new-line' type='audio/mpeg' />\n      </audio>\n      <br />\n      <br></br>\n      <p> Entry: {props.description} </p>\n      {/* <button className=\"card-btn\" onClick={handleClick} data-tag={spotify_id}> Pick this song for the day </button> */}\n    </div>\n  )\n}\n\n\nfunction mapDispatchToProps(dispatch){\n  return { selectSong: (song) => dispatch(selectSong(song)) }\n}\n\nexport default connect(null, null)(PastSongCard)\n\n","/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/entriesReducer.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/loadingReducer.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/components/Loading.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/containers/LoadingContainer.js",[],"/Volumes/Transcend/musicDiary/music-diary-client/src/reducers/entryReducer.js",["151"],"  \n  const initialState = {\n    entry_id: null\n  }\n\n  const emptyState = {\n    results: [],\n  }\n\n  \n  const EntryReducer = (state=initialState, action) => {\n \n    switch (action.type) {\n          case \"ADD_COMMENT_ID\":\n            return {\n            //   ...state,\n              entry_id: action.id\n            }\n      default:\n          return state\n  }\n  }\n  \n  export default EntryReducer","/Volumes/Transcend/musicDiary/music-diary-client/src/components/Navbar.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"156"},{"ruleId":"154","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":24},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"158","severity":1,"message":"164","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"165","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":24},{"ruleId":"158","severity":1,"message":"166","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":59,"column":20,"nodeType":"170","messageId":"171","endLine":59,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":21,"column":76,"nodeType":"170","messageId":"171","endLine":21,"endColumn":78},{"ruleId":"158","severity":1,"message":"172","line":24,"column":13,"nodeType":"160","messageId":"161","endLine":24,"endColumn":24},{"ruleId":"158","severity":1,"message":"173","line":25,"column":13,"nodeType":"160","messageId":"161","endLine":25,"endColumn":17},{"ruleId":"158","severity":1,"message":"174","line":26,"column":13,"nodeType":"160","messageId":"161","endLine":26,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":36,"column":23,"nodeType":"177","endLine":36,"endColumn":64},{"ruleId":"152","replacedBy":"178"},{"ruleId":"154","replacedBy":"179"},{"ruleId":"158","severity":1,"message":"180","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":34},{"ruleId":"158","severity":1,"message":"181","line":8,"column":38,"nodeType":"160","messageId":"161","endLine":8,"endColumn":48},{"ruleId":"152","replacedBy":"182"},{"ruleId":"154","replacedBy":"183"},{"ruleId":"158","severity":1,"message":"180","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":34},{"ruleId":"158","severity":1,"message":"184","line":8,"column":7,"nodeType":"160","messageId":"161","endLine":8,"endColumn":15},{"ruleId":"158","severity":1,"message":"185","line":41,"column":7,"nodeType":"160","messageId":"161","endLine":41,"endColumn":14},{"ruleId":"158","severity":1,"message":"186","line":7,"column":9,"nodeType":"160","messageId":"161","endLine":7,"endColumn":19},{"ruleId":"158","severity":1,"message":"181","line":9,"column":42,"nodeType":"160","messageId":"161","endLine":9,"endColumn":52},{"ruleId":"158","severity":1,"message":"174","line":10,"column":12,"nodeType":"160","messageId":"161","endLine":10,"endColumn":16},{"ruleId":"158","severity":1,"message":"187","line":12,"column":13,"nodeType":"160","messageId":"161","endLine":12,"endColumn":24},{"ruleId":"158","severity":1,"message":"188","line":38,"column":10,"nodeType":"160","messageId":"161","endLine":38,"endColumn":28},{"ruleId":"158","severity":1,"message":"186","line":6,"column":9,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],["189"],["190"],"no-unused-vars","'LoadingContainer' is defined but never used.","Identifier","unusedVar",["189"],["190"],"'Button' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'description' is assigned a value but never used.","'user' is assigned a value but never used.","'date' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["189"],["190"],"'Component' is defined but never used.","'spotify_id' is assigned a value but never used.",["189"],["190"],"'audioRef' is assigned a value but never used.","'content' is assigned a value but never used.","'emptyState' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'mapDispatchToProps' is defined but never used.","no-global-assign","no-unsafe-negation"]